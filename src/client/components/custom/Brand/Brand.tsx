import style from "./Brand.module.css"

import IsotipoColor from "./assets/IsotipoColor.png"
import rowIsoLogo from "./assets/RowIsoLogo.png"
import colIsoLogo from "./assets/ColIsoLogo.png"

interface Props {
  row?: boolean
  text?: boolean
  className?: string
  customColor?: string
  logo?: "logo" | "isotipo" | "isologotipo"
  onClick?: () => void
}

const renderLogo = (text: boolean, customColor?: string) => {
  return (
    <div
      className={style[`logo-${text ? "text" : "no-text"}`]}
      style={
        customColor ? ({ "--customColor": `${customColor}` } as React.CSSProperties) : undefined
      }
    >
      {text ? (
        <svg
          width="100"
          height="43"
          viewBox="0 0 100 43"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_97_1930)">
            <path
              d="M21.0523 39.903C18.6455 41.7646 15.7573 42.6936 12.3911 42.6936C10.2771 42.6936 8.28094 42.3133 6.40259 41.5491C4.52425 40.785 2.98589 39.5429 1.79425 37.8194C0.599245 36.0959 0.00342564 33.8843 0.00342564 31.1846V12.2766C5.94326e-05 8.24048 1.10418 5.18733 3.31914 3.11374C5.52738 1.03679 8.5738 0 12.4483 0C16.3228 0 19.3288 1.09738 21.463 3.28879C23.5972 5.48019 24.6643 8.49631 24.6643 12.3304V31.1812C24.6643 35.1365 23.4592 38.0415 21.0523 39.8997V39.903ZM17.7938 10.3949C17.5212 9.33786 16.9523 8.50641 16.0905 7.90049C15.2288 7.29458 13.9766 6.99162 12.3339 6.99162C10.6911 6.99162 9.43555 7.28448 8.57716 7.87356C7.71541 8.45928 7.14652 9.27391 6.87386 10.3107C6.6012 11.3475 6.46318 12.7074 6.46318 14.3905V30.0704C6.46318 31.9487 6.94118 33.4265 7.90055 34.5036C8.85992 35.5808 10.3377 36.1194 12.3339 36.1194C14.1752 36.1194 15.6125 35.5539 16.6493 34.4161C17.6861 33.2817 18.2045 31.7938 18.2045 29.9525V14.4511C18.2045 12.8084 18.0665 11.4552 17.7938 10.3982V10.3949Z"
              fill="#363636"
            />
            <path
              d="M43.7474 41.6939C43.6296 41.7343 43.1785 41.9093 42.3975 42.2224C41.6132 42.5354 40.5966 42.6936 39.3444 42.6936C31.9825 42.6936 28.3032 39.112 28.3032 31.9487V12.63H34.763V31.0095C34.763 32.8105 35.0861 34.1435 35.7324 35.0019C36.3788 35.8636 37.5839 36.2945 39.3444 36.2945C41.1049 36.2945 42.2797 35.8165 42.8688 34.8571C43.4545 33.8977 43.7508 32.5378 43.7508 30.7773V12.6334H50.2105V42.0541H44.1614L43.7508 41.7006L43.7474 41.6939Z"
              fill="#363636"
            />
            <path d="M54.6704 0.939178H61.1302V42.044H54.6704V0.939178Z" fill="#363636" />
            <path
              d="M69.1151 6.22412C68.4116 5.52058 68.0581 4.69586 68.0581 3.75669C68.0581 2.81751 68.4116 2.06348 69.1151 1.37678C69.8186 0.693436 70.6434 0.350082 71.5825 0.350082C72.5217 0.350082 73.2757 0.693436 73.9624 1.37678C74.6458 2.06348 74.9891 2.85454 74.9891 3.75669C74.9891 4.65883 74.6458 5.51721 73.9624 6.22412C73.2757 6.92766 72.4847 7.28111 71.5825 7.28111C70.6804 7.28111 69.822 6.92766 69.1151 6.22412ZM68.1759 12.6233H74.6357V42.044H68.1759V12.6266V12.6233Z"
              fill="#363636"
            />
            <path
              d="M85.8182 35.9377C86.542 36.5638 87.6495 36.8768 89.1373 36.8768C90.4299 36.8768 91.4264 36.5537 92.1333 35.9074C92.8368 35.261 93.1902 34.507 93.1902 33.6453C93.1902 32.4334 92.7493 31.5313 91.8707 30.9456C90.9887 30.3598 89.5716 29.7135 87.6124 29.0066C85.9293 28.4579 84.5391 27.9126 83.4417 27.3639C82.3443 26.8152 81.3681 25.9939 80.5064 24.8965C79.6446 23.8025 79.1363 22.3718 78.9781 20.6079C78.8603 19.2783 79.1262 17.9352 79.7725 16.5853C80.4188 15.2355 81.5129 14.1179 83.0613 13.2393C84.6064 12.3574 86.5925 11.9197 89.0229 11.9197C90.2751 11.9197 91.3826 12.0477 92.342 12.3001C93.3013 12.556 94.0554 12.8185 94.6041 13.0912C95.1528 13.3672 95.486 13.5423 95.6038 13.6197L93.7255 19.6082C93.648 19.5307 93.4393 19.3826 93.1095 19.1672C92.7762 18.9518 92.2578 18.7464 91.5543 18.5512C90.8507 18.3559 90.0092 18.2583 89.0296 18.2583C86.9156 18.2583 85.8586 18.844 85.8586 20.0188C85.8586 20.2545 85.8957 20.4901 85.9765 20.7224C86.0943 21.2711 86.505 21.7322 87.2085 22.1025C87.912 22.4762 88.9488 22.9138 90.3222 23.4255C92.241 24.129 93.8534 24.8258 95.1662 25.5091C96.479 26.1958 97.6134 27.2124 98.5728 28.5623C99.5322 29.9121 100.01 31.6457 100.01 33.7597C100.01 35.3654 99.6197 36.8634 98.8354 38.2536C98.051 39.6439 96.8493 40.7682 95.2234 41.6299C93.5976 42.4917 91.5711 42.9225 89.1474 42.9225C86.9156 42.9225 84.9868 42.5422 83.3643 41.778C81.7384 41.0139 80.5064 40.0074 79.6648 38.7552C78.8233 37.5029 78.3621 36.1127 78.2847 34.5844L84.7444 33.9381C84.7444 34.6417 85.1046 35.3082 85.8317 35.9343L85.8182 35.9377Z"
              fill="#363636"
            />
          </g>
          <defs>
            <clipPath id="clip0_97_1930">
              <rect width="100" height="42.9259" fill="white" />
            </clipPath>
          </defs>
        </svg>
      ) : (
        <svg
          width="42"
          height="60"
          viewBox="0 0 42 60"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M38.8049 26.5437C35.499 21.611 30.968 18.64 25.7609 16.2205C20.3399 13.6992 14.0348 10.5165 11.6412 9.36883C9.55228 8.33509 6.90028 6.55655 4.30076 4.12684C2.15939 2.26692 0.936324 0.45786 0.708261 0C-1.43311 13.3838 0.968616 19.6595 12.283 25.5832C11.6452 26.155 11.2961 26.4806 10.9368 26.794C3.05146 33.6151 2.14123 45.5296 8.89836 53.4923C15.5586 61.339 27.2948 62.1469 35.279 55.5964C43.5055 48.8465 43.5519 33.6232 38.807 26.5437H38.8049ZM36.9037 47.9674C34.4374 53.4801 28.9639 56.797 22.9737 56.7095C16.2852 56.6098 10.4666 52.2143 8.47655 45.7595C6.52892 39.4451 8.90845 32.4836 14.275 28.603C15.3124 27.8542 16.1863 27.6201 17.3973 28.2734C18.6526 28.951 19.9181 29.6062 21.1896 30.2574C16.2065 31.2871 12.4606 35.7334 12.4606 41.0588C12.4606 47.1494 17.3569 52.0882 23.3975 52.0882C29.4382 52.0882 34.3365 47.1494 34.3365 41.0588C34.3365 39.8521 34.1448 38.6922 33.7876 37.6056C35.497 39.1806 36.8028 41.128 37.3195 43.6147C37.6041 44.9903 37.4729 46.6976 36.9037 47.9674ZM30.193 41.0588C30.193 44.8438 27.1515 47.9105 23.3975 47.9105C19.6436 47.9105 16.6021 44.8438 16.6021 41.0588C16.6021 37.2739 19.6456 34.2072 23.3975 34.2072C27.1495 34.2072 30.193 37.2759 30.193 41.0588ZM19.5649 25.5893C15.0379 23.2918 10.2607 20.5426 6.33719 17.1972C2.70432 14.1001 1.95756 7.30337 2.02417 3.91114C7.04762 10.7099 17.7363 15.5917 25.8659 19.3441C29.3938 20.972 32.8369 23.3163 35.3093 26.4033C37.7716 29.4801 38.8453 33.9284 38.8534 37.9373C33.4848 31.8813 26.4229 29.069 19.5649 25.5893Z"
            fill="#363636"
          />
        </svg>
      )}
    </div>
  )
}

const renderIsoLogo = (row: boolean) => {
  return (
    <img
      draggable={false}
      src={row ? rowIsoLogo : colIsoLogo}
      alt={`${row ? "row" : "column"} - isoLogo`}
      className={style[`isoLogo-${row ? "row" : "column"}`]}
    />
  )
}

const renderIsoTipo = () => {
  return <img draggable={false} src={IsotipoColor} alt="logo - isoTipo" className={style.isoTipo} />
}

const Brand = ({
  className,
  row = true,
  text = true,
  customColor,
  logo = "isologotipo",
  onClick
}: Props) => {
  return (
    <div className={`${className} ${onClick ? style.clickable : ""}`} onClick={onClick}>
      {logo === "isotipo" && renderIsoTipo()}
      {logo === "isologotipo" && renderIsoLogo(row)}
      {logo === "logo" && renderLogo(text, customColor)}
    </div>
  )
}

export default Brand
